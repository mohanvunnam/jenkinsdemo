//import groovy.json.JsonSlurper
def putaws() {
                        list.each {
                                //echo "appname ${it.appname} and Version is ${it.version}"
                               // appname1 = it.appname
                                //version1 = it.version
    echo "Executing on the Environment $environment. Values of Application = ${it.appname}, Pakage Version = ${it.version} and apimgr = ${apimgr1}"                              
   sh "ls -ltrh | tail -5"
	echo "aws ssm put-parameter --name /${environment}/terraform/docker_images/${it.appname}_image --value 753224138664.dkr.ecr.us-east-1.amazonaws.com/${it.appname}:${api_imagetag} --overwrite  --type String"
}
}
pipeline {
    agent any
    stages {


       stage('Read the variables of service and versions') {
          steps {
                script {
		def datas = readYaml file: 'serviceskeyval.yml'
		approval1=datas."${environment}".approval
                list=datas."${environment}".applist
                       } //End of Script
                } //End of steps
                                                            } //End of Stage - Read the variables of service and versions


       stage('Execute based on Environment') {
          steps {
                script {
                        if (environment == 'prod' || environment == 'imp1' || environment == 'conv') {
                                putaws()

                            } else if (environment == 'dev1' || environment == 'dev2' ||  environment == 'dev3' || environment == 'qa1' ) {
                                putaws()
                            } else if (environment == 'pref' || environment == 'qa2') {
                                putaws()
                            } else if (environment == 'uat1') {
                                putaws()
                            } else {
                                echo 'No Matching environment found....... '
                                   }
                       }
                }
                                                                }


//	stage ('create ssm parameter store api'){
//            when {
//               environment name: 'update_api', value: 'yes'
//                 }// End of When

//            steps {
//                script {
//			putaws()
//		       } //End of Script
//		  } //End of Steps
//					}//End of stage - create ssm parameter store api


} // End of Stages
} // End of Pipeline
