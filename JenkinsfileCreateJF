def putaws() {

list.each {
env.clientname = it.clientname
env.releasenumber = it.releasenumber

script {
        // If condition to check the client name a assign proper variable value.
        // if any new client is coming, then dd the client name in the below If condition
        if (a == b){
                dummyvalue = testing

} else if (clientname == 'dc_cocc_bankgloucester'){
            clientnamecount = dc_cocc_bankgloucester
} else if (clientname == 'dc_cocc_baycoast'){
            clientnamecount = dc_cocc_baycoast
} else if (clientname == 'dc_cocc_libertybank'){
            clientnamecount = dc_cocc_libertybank
} else if (clientname == 'dc_cocc_owners'){
            clientnamecount = dc_cocc_owners
} else if (clientname == 'dc_cocc_reading'){
            clientnamecount = dc_cocc_reading
} else if (clientname == 'dc_cunify_cleanenergy'){
            clientnamecount = dc_cunify_cleanenergy
} else if (clientname == 'dc_cunify_downeast'){
            clientnamecount = dc_cunify_downeast
} else if (clientname == 'dc_dna_allegacy'){
            clientnamecount = dc_dna_allegacy
} else if (clientname == 'dc_dna_cfcu'){
            clientnamecount = dc_dna_cfcu
} else if (clientname == 'dc_dna_columbiacom'){
            clientnamecount = dc_dna_columbiacom
} else if (clientname == 'dc_dna_figfcu'){
            clientnamecount = dc_dna_figfcu
} else if (clientname == 'dc_dna_libertyfcu'){
            clientnamecount = dc_dna_libertyfcu
} else if (clientname == 'dc_dna_mecu'){
            clientnamecount = dc_dna_mecu
} else if (clientname == 'dc_dna_membersplus'){
            clientnamecount = dc_dna_membersplus
} else if (clientname == 'dc_dna_minnco'){
            clientnamecount = dc_dna_minnco
} else if (clientname == 'dc_dna_purdue'){
            clientnamecount = dc_dna_purdue
} else if (clientname == 'dc_dna_safefcu'){
            clientnamecount = dc_dna_safefcu
} else if (clientname == 'dc_dna_vermontfcu'){
            clientnamecount = dc_dna_vermontfcu
} else if (clientname == 'dc_episys_alliant'){
            clientnamecount = dc_episys_alliant
} else if (clientname == 'dc_episys_eecu'){
            clientnamecount = dc_episys_eecu
} else if (clientname == 'dc_episys_georgiaunited'){
            clientnamecount = dc_episys_georgiaunited
} else if (clientname == 'dc_episys_hudsonvalley'){
            clientnamecount = dc_episys_hudsonvalley
} else if (clientname == 'dc_episys_kirtland'){
            clientnamecount = dc_episys_kirtland
} else if (clientname == 'dc_episys_membersfirst'){
            clientnamecount = dc_episys_membersfirst
} else if (clientname == 'dc_episys_michiganstate'){
            clientnamecount = dc_episys_michiganstate
} else if (clientname == 'dc_episys_phillycu'){
            clientnamecount = dc_episys_phillycu
} else if (clientname == 'dc_episys_riverland'){
            clientnamecount = dc_episys_riverland
} else if (clientname == 'dc_episys_soundcu'){
            clientnamecount = dc_episys_soundcu
} else if (clientname == 'dc_episys_suneast'){
            clientnamecount = dc_episys_suneast
} else if (clientname == 'dc_episys_universityfcu'){
            clientnamecount = dc_episys_universityfcu
} else if (clientname == 'dc_episys_westreet'){
            clientnamecount = dc_episys_westreet
} else if (clientname == 'dc_jxchange_banksouth'){
            clientnamecount = dc_jxchange_banksouth
} else if (clientname == 'dc_jxchange_firststate'){
            clientnamecount = dc_jxchange_firststate
} else if (clientname == 'dc_keystone_cenwill'){
            clientnamecount = dc_keystone_cenwill
} else if (clientname == 'dc_keystone_expedition'){
            clientnamecount = dc_keystone_expedition
} else if (clientname == 'dc_keystone_frontwave'){
            clientnamecount = dc_keystone_frontwave
} else if (clientname == 'dc_keystone_longbeachcity'){
            clientnamecount = dc_keystone_longbeachcity
} else if (clientname == 'dc_keystone_parkview'){
            clientnamecount = dc_keystone_parkview
} else if (clientname == 'dc_keystone_primeway'){
            clientnamecount = dc_keystone_primeway
} else if (clientname == 'dc_keystone_princeton'){
            clientnamecount = dc_keystone_princeton
} else if (clientname == 'dc_keystone_togethercu'){
            clientnamecount = dc_keystone_togethercu
} else if (clientname == 'dc_pathways_massmutual'){
            clientnamecount = dc_pathways_massmutual
} else if (clientname == 'dc_q2_apgfcu'){
            clientnamecount = dc_q2_apgfcu
} else if (clientname == 'dc_vantage'){
            clientnamecount = dc_vantage
        }// End of if statments

        }// End of Script function


if (clientnamecount != 'NULL'){
echo "Executing on Environment $environment. Values of Application = ${clientname} and count is ${clientnamecount}"
echo "aws ssm put-parameter --name /${environment}/terraform/docker_images/${clientname} --value ${clientnamecount} --overwrite  --type String"
//sh "ls -ltrh configdata_${params['environment']}.json"
}

                }// End of list.each
        }// End of put aws


pipeline {
    agent any

parameters {
choice(name: 'environment', choices: ['dev1', 'dev2', 'dev3', 'pref'], description: 'on which environment to execute')
string(name: 'dc_cocc_bankgloucester', defaultValue: '', description: 'Count for dc_cocc_bankgloucester value')
string(name: 'dc_cocc_baycoast', defaultValue: '', description: 'Count for dc_cocc_baycoast value')
string(name: 'dc_cocc_libertybank', defaultValue: '', description: 'Count for dc_cocc_libertybank value')
string(name: 'dc_cocc_owners', defaultValue: '', description: 'Count for dc_cocc_owners value')
string(name: 'dc_cocc_reading', defaultValue: '', description: 'Count for dc_cocc_reading value')
string(name: 'dc_cunify_cleanenergy', defaultValue: '', description: 'Count for dc_cunify_cleanenergy value')
string(name: 'dc_cunify_downeast', defaultValue: '', description: 'Count for dc_cunify_downeast value')
string(name: 'dc_dna_allegacy', defaultValue: '', description: 'Count for dc_dna_allegacy value')
string(name: 'dc_dna_cfcu', defaultValue: '', description: 'Count for dc_dna_cfcu value')
string(name: 'dc_dna_columbiacom', defaultValue: '', description: 'Count for dc_dna_columbiacom value')
string(name: 'dc_dna_figfcu', defaultValue: '', description: 'Count for dc_dna_figfcu value')
string(name: 'dc_dna_libertyfcu', defaultValue: '', description: 'Count for dc_dna_libertyfcu value')
string(name: 'dc_dna_mecu', defaultValue: '', description: 'Count for dc_dna_mecu value')
string(name: 'dc_dna_membersplus', defaultValue: '', description: 'Count for dc_dna_membersplus value')
string(name: 'dc_dna_minnco', defaultValue: '', description: 'Count for dc_dna_minnco value')
string(name: 'dc_dna_purdue', defaultValue: '', description: 'Count for dc_dna_purdue value')
string(name: 'dc_dna_safefcu', defaultValue: '', description: 'Count for dc_dna_safefcu value')
string(name: 'dc_dna_vermontfcu', defaultValue: '', description: 'Count for dc_dna_vermontfcu value')
string(name: 'dc_episys_alliant', defaultValue: '', description: 'Count for dc_episys_alliant value')
string(name: 'dc_episys_eecu', defaultValue: '', description: 'Count for dc_episys_eecu value')
string(name: 'dc_episys_georgiaunited', defaultValue: '', description: 'Count for dc_episys_georgiaunited value')
string(name: 'dc_episys_hudsonvalley', defaultValue: '', description: 'Count for dc_episys_hudsonvalley value')
string(name: 'dc_episys_kirtland', defaultValue: '', description: 'Count for dc_episys_kirtland value')
string(name: 'dc_episys_membersfirst', defaultValue: '', description: 'Count for dc_episys_membersfirst value')
string(name: 'dc_episys_michiganstate', defaultValue: '', description: 'Count for dc_episys_michiganstate value')
string(name: 'dc_episys_phillycu', defaultValue: '', description: 'Count for dc_episys_phillycu value')
string(name: 'dc_episys_riverland', defaultValue: '', description: 'Count for dc_episys_riverland value')
string(name: 'dc_episys_soundcu', defaultValue: '', description: 'Count for dc_episys_soundcu value')
string(name: 'dc_episys_suneast', defaultValue: '', description: 'Count for dc_episys_suneast value')
string(name: 'dc_episys_universityfcu', defaultValue: '', description: 'Count for dc_episys_universityfcu value')
string(name: 'dc_episys_westreet', defaultValue: '', description: 'Count for dc_episys_westreet value')
string(name: 'dc_jxchange_banksouth', defaultValue: '', description: 'Count for dc_jxchange_banksouth value')
string(name: 'dc_jxchange_firststate', defaultValue: '', description: 'Count for dc_jxchange_firststate value')
string(name: 'dc_keystone_cenwill', defaultValue: '', description: 'Count for dc_keystone_cenwill value')
string(name: 'dc_keystone_expedition', defaultValue: '', description: 'Count for dc_keystone_expedition value')
string(name: 'dc_keystone_frontwave', defaultValue: '', description: 'Count for dc_keystone_frontwave value')
string(name: 'dc_keystone_longbeachcity', defaultValue: '', description: 'Count for dc_keystone_longbeachcity value')
string(name: 'dc_keystone_parkview', defaultValue: '', description: 'Count for dc_keystone_parkview value')
string(name: 'dc_keystone_primeway', defaultValue: '', description: 'Count for dc_keystone_primeway value')
string(name: 'dc_keystone_princeton', defaultValue: '', description: 'Count for dc_keystone_princeton value')
string(name: 'dc_keystone_togethercu', defaultValue: '', description: 'Count for dc_keystone_togethercu value')
string(name: 'dc_pathways_massmutual', defaultValue: '', description: 'Count for dc_pathways_massmutual value')
string(name: 'dc_q2_apgfcu', defaultValue: '', description: 'Count for dc_q2_apgfcu value')
string(name: 'dc_vantage', defaultValue: '', description: 'Count for dc_vantage value')
} //closing for parameters

    stages {
       stage('Read the variables of service and versions') {
          steps {
                script {
        echo "List of all Environments selected ${environment}"
     // If we select multiple environments at same time, then we get the benifit of env.list loop
      def envlist = environment.split(',').collect{it as String}
        envlist.each {
                echo "Working on ${it} environment"
                env.environment = it
                //Verify the JSOn file for particular environment is available or not.
                def exists = fileExists "configdata_${params['environment']}.json"
                echo "-------------------------------------------------------"
                echo "Looking for configdata_${environment}.json:"
                if (exists) {
                    echo "configdata_${environment}.json found"
                } else {
                    error("configdata_${environment}.json cannot be found")
                }// End of if condition to verify the JSON file
          echo "-------------------------------------------------------"

                def config = readJSON file: "configdata_${params['environment']}.json"
                //Read the clinets from JSON file and keep the clients in a lis
                list=config.deploy
                putaws()
                        }// End of envlist.each loop
                       }// End of script
                }// End of Steps

}// End of stage
}// End of stages
}// End of pipeline

