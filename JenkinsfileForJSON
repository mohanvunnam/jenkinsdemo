def putaws() {

list.each {
env.clientname = it.clientname
env.releasenumber = it.releasenumber

script {
	// If condition to check the client name a assign proper variable value.
	// if any new client is coming, then dd the client name in the below If condition 
	if (clientname == 'dc_cocc_bankgloucester'){
		clientnamecount = dc_cocc_bankgloucester_count
	} else if  (clientname == 'dc_cocc_baycoast'){
		clientnamecount = dc_cocc_baycoast_count
	}// End of if statments

	}// End of Script function

echo "Executing on Environment $environment. Values of Application = ${clientname} and count is ${clientnamecount}"
echo "aws ssm put-parameter --name /${environment}/terraform/docker_images/${clientname} --value ${clientnamecount} --overwrite  --type String"
sh "ls -ltrh configdata_${params['environment']}.json"


		}// End of list.each
	}// End of put aws


pipeline {
    agent any

    stages {
       stage('Read the variables of service and versions') {
          steps {
                script {
        echo "List of all Environments selected ${environment}"
     // If we select multiple environments at same time, then we get the benifit of env.list loop
      def envlist = environment.split(',').collect{it as String}
        envlist.each { 
                echo "Working on ${it} environment"
                env.environment = it
		//Verify the JSOn file for particular environment is available or not.
		def exists = fileExists "configdata_${params['environment']}.json"
		echo "-------------------------------------------------------"
	        echo "Looking for configdata_${environment}.json:"
        	if (exists) {
	            echo "configdata_${environment}.json found"
        	} else {
        	    error("configdata_${environment}.json cannot be found")
         	}// End of if condition to verify the JSON file
          echo "-------------------------------------------------------"

                def config = readJSON file: "configdata_${params['environment']}.json"
		//Read the clinets from JSON file and keep the clients in a lis
		list=config.deploy
		putaws()
			}// End of envlist.each loop
                       }// End of script
                }// End of Steps
				
}// End of stage
}// End of stages

